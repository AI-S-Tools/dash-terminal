id: t2-5-integration-testing
title: 'T2.5: Final Integration & Interactive Verification'
project_id: dash-terminal
phase_id: p2-core-functionality
status: todo
priority: critical
reporter: dppm-user
created: "2025-09-25"
updated: "2025-09-25"
dependency_ids: ["t2-1-websocket-handler", "t2-3-terminal-wrapper", "t2-4-native-tmux-manager"]
description: |
  ## T2.5: Final Integration & Interactive Verification

  **GOAL:** To perform a final, rigorous, interactive end-to-end verification of the entire PWA. This task ensures all components work together flawlessly and validates the implementation against concrete, real-world scenarios provided by the user across multiple platforms.

  --- 

  ### Part 1: Prerequisite Test Environment Setup
  **Instruction to User:** Before we begin, you must prepare the test environment. Please perform the following steps and confirm when you are ready.

  1.  **Create and Start Container:** Ensure a clean LXC container named `gemini-test-container` is running.
  2.  **Setup Tmux State:** Inside the container, establish the following tmux state:
      ```bash
      # Attach to the container
      lxc-attach gemini-test-container

      # Create first session, name window, and detach
      tmux new-session -s main -n editor -d

      # Create a new window in the first session
      tmux new-window -t main -n logs

      # Create a second session and detach
      tmux new-session -s secondary -n shell -d

      # Verify (optional)
      tmux ls
      ```
  3.  **Run Application:** Build and run the Go server and the frontend PWA.

  --- 

  ### Part 2: Interactive Test Regime (AI-led)
  **Process:** I, the AI, will ask you to perform an action in the UI. You will perform the action and report the exact outcome back to me. I will then validate it against the expected result.

  **Test Case 1: Initial Load & LXC Listing (Mac - Browser)**
  - **AI Asks:** "Please open the PWA in your browser on your Mac. What is the list of LXC containers you see?"
  - **Expected Outcome:** User must report seeing `gemini-test-container`.

  **Test Case 2: Tmux Session & Window Listing (Mac - Browser)**
  - **AI Asks:** "Please click on `gemini-test-container`. What are the session tabs that appear, and which one is active?"
  - **Expected Outcome:** User must report seeing `main` and `secondary`. `main` should be active.
  - **AI Asks:** "With `main` active, what are the window tabs you see?"
  - **Expected Outcome:** User must report seeing `editor` and `logs`.

  **Test Case 3: Concrete PTY I/O Verification (Mac - Browser)**
  - **AI Asks:** "In the active terminal (`main` -> `editor`), please type the command `echo "concrete-test-123" > /tmp/ai_verify.txt` and press Enter. Do you see any errors in the UI?"
  - **Expected Outcome:** User must report no errors.
  - **AI Asks:** "Excellent. Now, in a separate OS terminal, please run `lxc-attach gemini-test-container -- cat /tmp/ai_verify.txt`. What is the exact output?"
  - **Expected Outcome:** User must report the exact string `concrete-test-123`. This provides non-negotiable proof of PTY passthrough to the container's filesystem.

  **Test Case 4: Session & State Switching (Mac - Browser)**
  - **AI Asks:** "In the PWA, please click the `secondary` session tab. The window tab should now show `shell`. Please type `pwd` in the terminal and press Enter. What is the output?"
  - **Expected Outcome:** User must report a valid path from within the container (e.g., `/root`).
  - **AI Asks:** "Now, switch back to the `main` session tab in the PWA. Does the terminal content show your previous work from Test Case 3?"
  - **Expected Outcome:** User must confirm they see the `echo` command and its output from the previous test, proving terminal state is correctly cached per session.

  **Test Case 5: Cross-Platform Verification (iPhone)**
  - **AI Asks:** "Please open the PWA on your iPhone. Does the UI correctly adapt to the mobile screen?"
  - **Expected Outcome:** User confirmation.
  - **AI Asks:** "Please repeat the process of selecting the `gemini-test-container` and then the `secondary` session. Does it work as expected?"
  - **Expected Outcome:** User confirmation.
  - **AI Asks:** "Is the on-screen keyboard usable for typing in the terminal?"
  - **Expected Outcome:** User confirmation.

  --- 

  **ðŸŽ¯ SUCCESS CRITERIA:**
  - All interactive test cases (1-5) are passed, with the user's reported outcomes matching the expected outcomes.
  - The PWA's state (sessions, windows) is confirmed by the user to perfectly mirror the actual `tmux ls` state inside the LXC container at every step.
  - The AI has validated each piece of user feedback, confirming the entire system works end-to-end without any form of mocking.
