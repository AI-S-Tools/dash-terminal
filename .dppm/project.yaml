name: dash-terminal
version: 1.0.0
description: LXC Terminal PWA with native tmux integration - Go PTY server + xterm.js frontend
type: lxc-terminal-pwa

# ðŸ¤– AI START HERE - READ THIS FIRST!
ai_instructions: |
  STOP! Do not start coding yet!

  1. FIRST: Check if dppm app is available:
     command: dppm status project dash-terminal

  2. IF dppm available: Follow dppm task order
  3. IF no dppm: Read docs/tasklist.md for task breakdown
  4. ALWAYS start with T1.1 project-setup (critical priority)

  NEVER start with PWA or frontend - backend foundation first!

metadata:
  author: AI-S-Tools
  license: MIT
  repository: https://github.com/AI-S-Tools/dash-terminal
  homepage: https://github.com/AI-S-Tools/dash-terminal

dependencies:
  runtime:
    - go: ">=1.21"
    - lxc: ">=5.0"
    - tmux: ">=3.0"

  packages:
    - github.com/gorilla/websocket: "v1.5.0"
    - github.com/creack/pty: "v1.1.18"

# ðŸŽ¯ DEVELOPMENT WORKFLOW
workflow: |
  AI MUST follow this order:

  Phase 1 - Foundation:
    1. T1.1 project-setup (Go structure + tests)
    2. T1.2 pwa-foundation (PWA manifest + service worker)
    3. T1.3 tmux-ui-framework (CSS tabs only)
    4. T1.4 tmux-websocket-protocol (Go message structs)

  Phase 2 - Core Functionality:
    5. T2.1 websocket-handler (Go WebSocket server)
    6. T2.2 lxc-manager (Go LXC interface)
    7. T2.3 terminal-wrapper (xterm.js integration)
    8. T2.4 native-tmux-manager (Go tmux control)

  Phase 3 - Mobile Polish:
    9. T3.1 session-tabs (JavaScript components)
    10. T3.2 window-tabs (JavaScript components)
    11. T3.3 pane-grid-system (Layout rendering)
    12. T3.4 touch-gestures (Mobile interactions)

scripts:
  start: "go run cmd/server/main.go"
  build: "go build -o dash-terminal cmd/server/main.go"
  test: "go test ./..."
  lint: "gofmt -l . && go vet ./..."

# ðŸ”’ TAILSCALE HTTPS SETUP
tailscale:
  domain: developer-dash.tail2d448.ts.net
  https_url: https://developer-dash.tail2d448.ts.net
  certificates:
    public: developer-dash.tail2d448.ts.net.crt
    private: developer-dash.tail2d448.ts.net.key
  testing_urls:
    - https://developer-dash.tail2d448.ts.net
    - https://developer-dash (short form)

# ðŸ“‹ ALL TASK VERIFICATION MUST USE TAILSCALE HTTPS
verification_endpoints:
  base_url: "https://developer-dash.tail2d448.ts.net"
  pwa_test: "https://developer-dash.tail2d448.ts.net"
  websocket: "wss://developer-dash.tail2d448.ts.net/ws"

target_structure:
  cmd/server/main.go: Go HTTP server entry point
  internal/:
    lxc/: LXC container management
    pty/: PTY session handling
    tmux/: Native tmux integration
    websocket/: WebSocket message handling
  web/:
    index.html: PWA application
    manifest.json: PWA manifest
    sw.js: Service worker
    css/tmux-ui.css: Native tmux UI styling
    js/: xterm.js + WebSocket client

features:
  - Real-time system monitoring (CPU, Memory, Disk, Network)
  - Git repository status and branch information
  - Task/TODO management with persistence
  - Log file monitoring and filtering
  - Customizable themes and layouts
  - Keyboard shortcuts for navigation
  - API monitoring and health checks
  - Weather information widget
  - Docker container status
  - Process monitoring

configuration:
  layout:
    grid: true
    columns: 12
    rows: 12

  refresh_rates:
    system: 1000
    network: 2000
    git: 5000
    weather: 600000

  shortcuts:
    quit: "q"
    help: "h"
    refresh: "r"
    theme_toggle: "t"
    focus_next: "tab"
    focus_previous: "shift+tab"

environment:
  DPPM_THEME: dark
  DPPM_LOG_LEVEL: info
  DPPM_CONFIG_PATH: ./config/default.yaml
  DPPM_DATA_DIR: ~/.dppm/dash-terminal

build:
  output: dist/
  minify: false
  sourcemaps: true